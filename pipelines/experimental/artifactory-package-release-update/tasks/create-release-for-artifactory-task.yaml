apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-release-for-artifactory-task
  namespace: kabanero
  author: Oscar I. Ricaud
  date: 04/21/20
spec:
  inputs:
    params:
      - name: asuh-image
        default: googlefu/apic_compiler:v3-amd64
        type: string
      - name: pipeline-version
        type: string
        description: This is the pipeline version we are uploading to artifactory
        default: ""
    resources:
      - name: source
        type: git
  steps:
    - name: generate-zip-file
      image: $(inputs.params.asuh-image)
      script: |

        # generate your zip file
        cd ci
        ./package.sh

      env:
        - name: PIPELINE_VERSION
          value: $(inputs.params.pipeline-version)
      resources: {}
      workingDir: $(inputs.resources.source.path)

    - name: upload-asset-to-artifactory
      image: $(inputs.params.asuh-image)
      args:
        - '-c'
        - |
          set -e
          apt-get install -y jq curl

          filepath=./ci/assets/default-kabanero-pipelines.tar.gz
          checksum_256=$(shasum -a 256 ./$filepath | grep -Eo '^[^ ]+' )
          checksum_1=$(shasum -a 1 ./$filepath | grep -Eo '^[^ ]+' )
          echo $checksum_256 > 256.txt
          echo $checksum_1 > 1.txt
          filename=default-kabanero-pipelines
          artifactory_repo_path="https://artifactory-tools.devops-gse-state-288036-0143c5dd31acd8e030a1d6e0ab1380e3-0000.tor01.containers.appdomain.cloud/artifactory/pipeline-server"
          api_key="SET YOUR API KEY HERE"
          curl -H X-Checksum-Sha1:${checksum_1} -H X-Checksum-Sha256:${checksum_256} -H "X-JFrog-Art-Api:$api_key" -X PUT "$artifactory_repo_path/$filename-$PIPELINE_VERSION.tar.gz" -T $filepath

      env:
        - name: PIPELINE_VERSION
          value: $(inputs.params.pipeline-version)
        - name: REPO_NAME
          value: pipeline-server
      resources: {}
      workingDir: $(inputs.resources.source.path)

    - name: update-kabanero-cr
      image: $(inputs.params.asuh-image)
      args:
        - '-c'
        - |
          set -e
          # install packages
          apt-get install -y jq

          oc project kabanero

          oc get kabanero -o json > ./json/kabanero.json
          echo "here is the json file"
          cat ./json/kabanero.json
          echo "here is the end"

          base_url=https://artifactory-tools.devops-gse-state-288036-0143c5dd31acd8e030a1d6e0ab1380e3-0000.tor01.containers.appdomain.cloud/artifactory/pipeline-server/
          filename=default-kabanero-pipelines-
          host_url=$base_url$filename$PIPELINE_VERSION.tar.gz
          # echo $host_url
          name_of_pipeline=testing_pipeline-2
          tar_file_name=default-kabanero-pipelines.tar.gz

          # generate sha256 on the zip file
          # get_sha=$(shasum -a 256 ./$tar_file_name | grep -Eo '^[^ ]+' )
          get_sha=$(cat ./256.txt | head -n 1)

          # echo "sha256 value: " $get_sha

          # add double quotes to the sha256
          new_sha=\"${get_sha}\"

          # get the add_pipeline_template.json and replace the url, id and sha256 values and store it in another file
          jq '.https.url="'$host_url'" | .id="'$name_of_pipeline'" | .sha256="'$get_sha'"' ./json/add_pipeline_template.json > ./json/add_pipeline_modified_template.json


          # cat ./json/add_pipeline_modified_template.json

          # Get the number of pipelines we currently have on the kabanero CR and increment by 1

          num_of_pipelines=$(jq '.items[].spec.stacks.pipelines | length' ./json/kabanero.json)

          # echo $num_of_pipelines

          # add the add_pipeline_modified_template.json to the kabanero.json file
          jq '.items[].spec.stacks.pipelines['$num_of_pipelines']='"$(cat ./json/add_pipeline_modified_template.json)"'' ./json/kabanero.json | json_pp

          # prettify and store the result in another file
          # echo $result | json_pp > ./json/kabanero-2.json

          # cat ./json/kabanero.json

          oc delete kabanero kabanero
          # apply your new changes to the kabanero custom resource
          oc apply -f ./json/kabanero.json

      env:
        - name: REPO_NAME
          value: pipeline-server
        - name: PIPELINE_VERSION
          value: $(inputs.params.pipeline-version)
      resources: {}
      workingDir: $(inputs.resources.source.path)